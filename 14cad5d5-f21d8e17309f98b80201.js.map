{"version":3,"sources":["webpack://gatsby-casper/./src/components/PostCard.tsx"],"names":["PostCard","post","large","date","Date","frontmatter","datetime","format","displayDatetime","className","image","css","PostCardStyles","PostCardLarge","PostCardImageLink","to","fields","slug","PostCardImage","childImageSharp","fluid","alt","title","style","height","PostCardContent","PostCardContentLink","PostCardHeader","tags","PostCardPrimaryTag","PostCardTitle","PostCardExcerpt","excerpt","PostCardMeta","authors","author","tooltip","PostCardBylineContent","map","index","key","id","length","dateTime","readingTime","text","colors","lighten","AuthorProfileImage"],"mappings":"2RAmBO,MAAMA,EAAoC,EAAGC,OAAMC,SAAQ,MAAa,IAAD,MAC5E,MAAMC,EAAO,IAAIC,KAAKH,EAAKI,YAAYF,MAEjCG,GAAWC,OAAOJ,EAAM,cAExBK,GAAkBD,OAAOJ,EAAM,eAErC,OACE,mBACEM,UAAY,aAAYR,EAAKI,YAAYK,MAAQ,GAAK,cACpDR,EAAQ,kBAAoB,KAE9BS,IAAG,CAAGC,EAAgBV,GAASW,EAA5B,QAEFZ,EAAKI,YAAYK,QAChB,QAAC,KAAD,CAAMD,UAAU,uBAAuBE,IAAKG,EAAmBC,GAAId,EAAKe,OAAOC,OAC7E,QAACC,EAAD,CAAeT,UAAU,oBACtB,UAAAR,EAAKI,mBAAL,mBAAkBK,aAAlB,mBAAyBS,uBAAzB,eAA0CC,SACzC,QAAC,IAAD,CACEC,IAAM,GAAEpB,EAAKI,YAAYiB,oBACzBC,MAAO,CAAEC,OAAQ,QACjBJ,MAAOnB,EAAKI,YAAYK,MAAMS,gBAAgBC,WAMxD,QAACK,EAAD,CAAiBhB,UAAU,sBACzB,QAAC,KAAD,CAAMA,UAAU,yBAAyBE,IAAKe,EAAqBX,GAAId,EAAKe,OAAOC,OACjF,QAACU,EAAD,CAAgBlB,UAAU,oBACvBR,EAAKI,YAAYuB,OAChB,QAACC,EAAD,CAAoBpB,UAAU,0BAC5B,QAAC,KAAD,CAAMM,GAAK,SAAQ,IAAYd,EAAKI,YAAYuB,KAAK,QAClD3B,EAAKI,YAAYuB,KAAK,MAI7B,QAACE,EAAD,CAAerB,UAAU,mBAAmBR,EAAKI,YAAYiB,SAE/D,QAACS,EAAD,CAAiBtB,UAAU,sBACzB,iBAAIR,EAAKI,YAAY2B,SAAW/B,EAAK+B,YAGzC,QAACC,EAAD,CAAcxB,UAAU,mBACtB,QAAC,IAAD,CAAYyB,QAASjC,EAAKI,YAAY8B,OAAQC,QAAQ,WACtD,QAACC,EAAD,CAAuB5B,UAAU,6BAC/B,oBACGR,EAAKI,YAAY8B,OAAOG,KAAI,CAACH,EAAQI,KAElC,QAAC,WAAD,CAAgBC,IAAKL,EAAOM,KAC1B,QAAC,KAAD,CAAM1B,GAAK,WAAU,IAAYoB,EAAOM,QAASN,EAAOM,IACvDxC,EAAKI,YAAY8B,OAAOO,OAAS,EAAIH,GAAS,UAKvD,gBAAM9B,UAAU,0BACd,gBAAMkC,SAAUrC,GAAWE,GAAwB,KACnD,gBAAMC,UAAU,QAAhB,KAFF,IAEwCR,EAAKe,OAAO4B,YAAYC,WAStEjC,EAAc,wLAYdC,EAAa,mlBAmDbC,EAAiB,mGAOjBI,GAAa,yEAGH4B,cAHG,iGAODA,aAPC,MAWbrB,GAAe,6GAMfC,GAAsBf,QAAH,yCAIdmC,aAJc,qCAWnBjB,GAAkB,6DAGbiB,SAHa,oFAUlBhB,GAAa,wMAUbC,GAAe,+GAKRgB,QAAQ,MAAOD,aALP,gBASfb,GAAY,+GAMZI,GAAqB,iHAMhBU,QAAQ,MAAOD,aANC,6HAmBdC,QAAQ,MAAOD,cAnBD,8FA8BrBnB,GAAc,iFAmBPqB,IAJOD,QAAQ,OAAQD,eAIFnC,QAAH,oDAKfoC,QAAQ,MAAOD,eALA,uFAUbA,aAVa","file":"14cad5d5-f21d8e17309f98b80201.js","sourcesContent":["import { format } from 'date-fns';\r\nimport { Link } from 'gatsby';\r\nimport Img from 'gatsby-image';\r\nimport _ from 'lodash';\r\nimport { lighten } from 'polished';\r\nimport React from 'react';\r\n\r\nimport { css } from '@emotion/react';\r\nimport styled from '@emotion/styled';\r\n\r\nimport { colors } from '../styles/colors';\r\nimport { PageContext } from '../templates/post';\r\nimport { AuthorList } from './AuthorList';\r\n\r\nexport interface PostCardProps {\r\n  post: PageContext;\r\n  large?: boolean;\r\n}\r\n\r\nexport const PostCard: React.FC<PostCardProps> = ({ post, large = false }) => {\r\n  const date = new Date(post.frontmatter.date);\r\n  // 2018-08-20\r\n  const datetime = format(date, 'yyyy-MM-dd');\r\n  // 20 AUG 2018\r\n  const displayDatetime = format(date, 'dd LLL yyyy');\r\n\r\n  return (\r\n    <article\r\n      className={`post-card ${post.frontmatter.image ? '' : 'no-image'} ${\r\n        large ? 'post-card-large' : ''\r\n      }`}\r\n      css={[PostCardStyles, large && PostCardLarge]}\r\n    >\r\n      {post.frontmatter.image && (\r\n        <Link className=\"post-card-image-link\" css={PostCardImageLink} to={post.fields.slug}>\r\n          <PostCardImage className=\"post-card-image\">\r\n            {post.frontmatter?.image?.childImageSharp?.fluid && (\r\n              <Img\r\n                alt={`${post.frontmatter.title} cover image`}\r\n                style={{ height: '100%' }}\r\n                fluid={post.frontmatter.image.childImageSharp.fluid}\r\n              />\r\n            )}\r\n          </PostCardImage>\r\n        </Link>\r\n      )}\r\n      <PostCardContent className=\"post-card-content\">\r\n        <Link className=\"post-card-content-link\" css={PostCardContentLink} to={post.fields.slug}>\r\n          <PostCardHeader className=\"post-card-header\">\r\n            {post.frontmatter.tags && (\r\n              <PostCardPrimaryTag className=\"post-card-primary-tag\">\r\n                <Link to={`/tags/${_.kebabCase(post.frontmatter.tags[0])}/`}>\r\n                  {post.frontmatter.tags[0]}\r\n                </Link>\r\n              </PostCardPrimaryTag>\r\n            )}\r\n            <PostCardTitle className=\"post-card-title\">{post.frontmatter.title}</PostCardTitle>\r\n          </PostCardHeader>\r\n          <PostCardExcerpt className=\"post-card-excerpt\">\r\n            <p>{post.frontmatter.excerpt || post.excerpt}</p>\r\n          </PostCardExcerpt>\r\n        </Link>\r\n        <PostCardMeta className=\"post-card-meta\">\r\n          <AuthorList authors={post.frontmatter.author} tooltip=\"small\" />\r\n          <PostCardBylineContent className=\"post-card-byline-content\">\r\n            <span>\r\n              {post.frontmatter.author.map((author, index) => {\r\n                return (\r\n                  <React.Fragment key={author.id}>\r\n                    <Link to={`/author/${_.kebabCase(author.id)}/`}>{author.id}</Link>\r\n                    {post.frontmatter.author.length - 1 > index && ', '}\r\n                  </React.Fragment>\r\n                );\r\n              })}\r\n            </span>\r\n            <span className=\"post-card-byline-date\">\r\n              <time dateTime={datetime}>{displayDatetime}</time>{' '}\r\n              <span className=\"bull\">&bull;</span> {post.fields.readingTime.text}\r\n            </span>\r\n          </PostCardBylineContent>\r\n        </PostCardMeta>\r\n      </PostCardContent>\r\n    </article>\r\n  );\r\n};\r\n\r\nconst PostCardStyles = css`\r\n  position: relative;\r\n  flex: 1 1 301px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow: hidden;\r\n  margin: 0 0 40px;\r\n  padding: 0 20px 40px;\r\n  min-height: 220px;\r\n  background-size: cover;\r\n`;\r\n\r\nconst PostCardLarge = css`\r\n  @media (min-width: 795px) {\r\n    flex: 1 1 100%;\r\n    flex-direction: row;\r\n    padding-bottom: 40px;\r\n    min-height: 280px;\r\n    border-top: 0;\r\n\r\n    :not(.no-image) .post-card-header {\r\n      margin-top: 0;\r\n    }\r\n\r\n    .post-card-image-link {\r\n      position: relative;\r\n      flex: 1 1 auto;\r\n      margin-bottom: 0;\r\n      min-height: 380px;\r\n    }\r\n\r\n    .post-card-image {\r\n      position: absolute;\r\n      width: 100%;\r\n      height: 100%;\r\n    }\r\n\r\n    .post-card-content {\r\n      flex: 0 1 361px;\r\n      justify-content: center;\r\n    }\r\n\r\n    .post-card-title {\r\n      margin-top: 0;\r\n      font-size: 3.2rem;\r\n    }\r\n\r\n    .post-card-content-link {\r\n      padding: 0 0 0 40px;\r\n    }\r\n\r\n    .post-card-meta {\r\n      padding: 0 0 0 40px;\r\n    }\r\n\r\n    .post-card-excerpt p {\r\n      margin-bottom: 1.5em;\r\n      font-size: 1.8rem;\r\n      line-height: 1.5em;\r\n    }\r\n  }\r\n`;\r\n\r\nconst PostCardImageLink = css`\r\n  position: relative;\r\n  display: block;\r\n  overflow: hidden;\r\n  border-radius: 5px 5px 0 0;\r\n`;\r\n\r\nconst PostCardImage = styled.div`\r\n  width: auto;\r\n  height: 200px;\r\n  background: ${colors.lightgrey} no-repeat center center;\r\n  background-size: cover;\r\n\r\n  @media (prefers-color-scheme: dark) {\r\n    background: ${colors.darkmode};\r\n  }\r\n`;\r\n\r\nconst PostCardContent = styled.div`\r\n  flex-grow: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst PostCardContentLink = css`\r\n  position: relative;\r\n  display: block;\r\n  /* color: var(--darkgrey); */\r\n  color: ${colors.darkgrey};\r\n\r\n  :hover {\r\n    text-decoration: none;\r\n  }\r\n`;\r\n\r\nconst PostCardPrimaryTag = styled.div`\r\n  margin: 0 0 0.2em;\r\n  /* color: var(--blue); */\r\n  color: ${colors.blue};\r\n  font-size: 1.2rem;\r\n  font-weight: 500;\r\n  letter-spacing: 0.2px;\r\n  text-transform: uppercase;\r\n`;\r\n\r\nconst PostCardTitle = styled.h2`\r\n  margin: 0 0 0.4em;\r\n  line-height: 1.15em;\r\n  transition: color 0.2s ease-in-out;\r\n\r\n  @media (prefers-color-scheme: dark) {\r\n    color: rgba(255, 255, 255, 0.85);\r\n  }\r\n`;\r\n\r\nconst PostCardExcerpt = styled.section`\r\n  font-family: Georgia, serif;\r\n\r\n  @media (prefers-color-scheme: dark) {\r\n    /* color: color(var(--midgrey) l(+10%)); */\r\n    color: ${lighten('0.1', colors.midgrey)} !important;\r\n  }\r\n`;\r\n\r\nconst PostCardMeta = styled.footer`\r\n  display: flex;\r\n  align-items: flex-start;\r\n  padding: 0;\r\n`;\r\n\r\nconst PostCardBylineContent = styled.div`\r\n  flex: 1 1 50%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 4px 0 0 10px;\r\n  /* color: color(var(--midgrey) l(+10%)); */\r\n  color: ${lighten('0.1', colors.midgrey)};\r\n  font-size: 1.2rem;\r\n  line-height: 1.4em;\r\n  font-weight: 400;\r\n  letter-spacing: 0.2px;\r\n  text-transform: uppercase;\r\n\r\n  span {\r\n    margin: 0;\r\n  }\r\n\r\n  a {\r\n    /* color: color(var(--darkgrey) l(+20%)); */\r\n    color: ${lighten('0.2', colors.darkgrey)};\r\n    font-weight: 600;\r\n  }\r\n\r\n  @media (prefers-color-scheme: dark) {\r\n    a {\r\n      color: rgba(255, 255, 255, 0.75);\r\n    }\r\n  }\r\n`;\r\n\r\nconst PostCardHeader = styled.header`\r\n  margin: 15px 0 0;\r\n`;\r\n\r\nexport const StaticAvatar = css`\r\n  display: block;\r\n  overflow: hidden;\r\n  margin: 0 0 0 -6px;\r\n  width: 34px;\r\n  height: 34px;\r\n  border: #fff 2px solid;\r\n  border-radius: 100%;\r\n\r\n  @media (prefers-color-scheme: dark) {\r\n    /* border-color: color(var(--darkgrey) l(+2%)); */\r\n    border-color: ${lighten('0.02', colors.darkgrey)};\r\n  }\r\n`;\r\n\r\nexport const AuthorProfileImage = css`\r\n  display: block;\r\n  width: 100%;\r\n  height: 100%;\r\n  /* background: color(var(--lightgrey) l(+10%)); */\r\n  background: ${lighten('0.1', colors.lightgrey)};\r\n  border-radius: 100%;\r\n  object-fit: cover;\r\n\r\n  @media (prefers-color-scheme: dark) {\r\n    background: ${colors.darkmode};\r\n  }\r\n`;\r\n"],"sourceRoot":""}